<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>