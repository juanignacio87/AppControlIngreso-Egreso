<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAcJj9f2K0cS18nCfgAAAAAElFTkSuQmCC
</value>
  </data>
</root>